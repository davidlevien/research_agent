[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "research-system"
version = "8.6.1"
description = "Production-ready research system with comprehensive error recovery and monitoring"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Research System Team", email = "team@research-system.io"}
]
keywords = ["research", "agent", "ai", "automation", "information-gathering"]

dependencies = [
    "sentence-transformers>=2.2.0",
    "crewai>=0.30.0",
    "pydantic>=2.0.0",
    "httpx>=0.25.0",
    "asyncio>=3.4.3",
    "structlog>=23.2.0",
    "python-dotenv>=1.0.0",
    "jsonschema>=4.19.0",
    "redis>=5.0.0",
    "aioredis>=2.0.1",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-exporter-otlp>=1.21.0",
    "cryptography>=41.0.0",
    "bleach>=6.1.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "openai>=1.0.0",
    "anthropic>=0.8.0",
    "tiktoken>=0.5.0",
    "tenacity>=8.2.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "slowapi>=0.1.9",
    "pyyaml>=6.0.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "psutil>=5.9.0",
    "nltk>=3.8.0",
]

[project.optional-dependencies]
web = [
    "trafilatura>=1.7.0",
    "extruct>=0.16.0",
    "w3lib>=2.2.1",
    "tldextract>=5.0.0",
]

test = [
    "pytest>=8.2",
    "pytest-asyncio>=0.23",
    "pytest-cov>=6.0",
    "responses>=0.25",
]

dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.12.0",
    "black>=23.12.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "safety>=3.0.0",
    "bandit>=1.7.0",
    "ipython>=8.18.0",
    "jupyter>=1.0.0",
    "pre-commit>=3.5.0",
]

monitoring = [
    "grafana-client>=3.5.0",
    "jaeger-client>=4.8.0",
]

[project.scripts]
research-system = "research_system.main:main"
research-system-api = "research_system.api_main:main"

[project.urls]
Homepage = "https://github.com/research-system/research-system"
Documentation = "https://docs.research-system.io"
Repository = "https://github.com/research-system/research-system"
Issues = "https://github.com/research-system/research-system/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["research_system*"]

[tool.setuptools.package-data]
"research_system.resources" = ["*.yaml", "*.json"]
"research_system.resources.schemas" = ["*.json"]
"research_system.resources.config" = ["*.yaml"]
research_system = [
    "resources/*.yaml",
    "resources/schemas/*.json",
    "resources/config/*.yaml",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I", "N", "UP", "B", "C90", "S"]
ignore = ["E501", "B008", "S101"]
target-version = "py311"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short --strict-markers"
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "security: Security tests",
    "slow: Slow running tests",
    "asyncio: Asynchronous tests",
]

[tool.coverage.run]
source = ["research_system"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
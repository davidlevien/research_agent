name: ci
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with: { python-version: '3.11' }
    - run: python -m pip install --upgrade pip
    - run: python -m pip install -e ".[web,test,dev]"
    - name: Setup test environment
      run: |
        # Copy example env for testing (without API keys)
        cp .env.example .env
        # Set test-only values
        echo "CONTACT_EMAIL=ci-test@example.com" >> .env
        echo "ENABLE_FREE_APIS=true" >> .env
        echo "SEARCH_PROVIDERS=" >> .env
    - name: Check packaged schema
      run: |
        python - << 'PY'
        try:
            from importlib import resources
            with resources.files("research_system.resources.schemas").joinpath("evidence.schema.json").open() as f:
                import json
                js = json.load(f)
                print("✓ Schema loaded successfully, keys:", list(js.keys())[:3])
        except Exception as e:
            print(f"✗ Failed to load schema: {e}")
            exit(1)
        PY
    - name: Run tests
      env:
        SEARCH_PROVIDERS: ""  # Disable search providers for unit tests
        ENABLE_FREE_APIS: "true"  # Use free APIs for testing
        OUTPUT_DIR: "test_outputs"  # Use test output directory
        CHECKPOINT_DIR: "test_outputs/checkpoints"
        CONTACT_EMAIL: "test@example.com"  # Required for API compliance
      run: |
        mkdir -p test_outputs
        pytest -q
    - name: Run v8.4 sanity tests
      run: |
        PYTHONPATH=. pytest tests/test_v84_fixes.py -q --tb=no
    - name: Run v8.5 pack-aware tests
      run: |
        PYTHONPATH=. pytest tests/test_primary_share.py -q --tb=no
    - name: Run adaptive quality tests
      run: |
        PYTHONPATH=. pytest tests/test_adaptive_quality.py -q --tb=no
    - name: Run evidence repair tests
      run: |
        PYTHONPATH=. pytest tests/test_evidence_repair.py -q --tb=no 2>/dev/null || true
    - name: Run composer bugfix tests  
      run: |
        PYTHONPATH=. pytest tests/test_composer_bugfix.py -q --tb=no 2>/dev/null || true